#!/bin/sh
# Run through a series of autofunctions whenever the array is powered on

savedir=/mnt/usb1
min_hd_space=$((1024*1024))	# 1 GB


ifaceup () {
    file=/sys/class/net/$1/operstate
    
    if [ -f "$file" ]; then
	status=$(cat $file)
	# status is likely but not definitely "up"
    else
	status="down"
    fi
    
    echo "INFO: iface $1: $status"
    
    if [ ! "$status" = "down" ]; then
	return 0
    else
	return 1
    fi
}

backup_node () {

    echo "INFO: backing up $1"

    viddir=$savedir/$1/Videos
    logdir=$savedir/$1/log
    
    if [ ! -d "$logdir" ];
    then
	echo "INFO: Creating log backup dir: $logdir"
	mkdir -p $logdir || echo "ERROR: Failed to create $logdir"
    else
	echo "DEBUG: $logdir exists"
    fi
    
    if [ ! -d "$viddir" ];
    then
	echo "INFO: video backup dir: $viddir"
	mkdir -p $viddir || echo "ERROR: Failed to create $viddir"
    else
	echo "DEBUG: $viddir exists"
    fi
    
    rsync -a pi@$1:/var/log/syslog $logdir &> /dev/null
    rsync -a pi@$1:Videos/ $viddir &> /dev/null

    return 0
}


# TODO: pipe to logger

echo "INFO: Controller powered on"
echo "INFO: Syncing time"	# TODO

# Check network interfaces
ifaceup usb1
ifaceup usb2
ifaceup usb3
ifaceup usb4

# Check hard drive space
if ! mountpoint -q $savedir
then
    echo "WARNING: Hardrive not detected"
    savedir=/home/pi
fi
echo "INFO: backing up to $savedir"

free_space=`df --output=avail $savedir | tail -n1`
echo "INFO: Free space: $free_space ($((free_space/1024/1024)) GB)"


# If space back up nodes
if [ "$free_space" -lt "$min_hd_space" ]
then
    echo "ERROR: not enough space"
    # TODO: quit
else
    echo "INFO: Backing up nodes"
    for n in 1 2 3 4 5 6
    do
	if ifaceup usb$n
	then
	    backup_node "10.0.1$n.2" || "ERROR: Back up 10.0.1$n.2 failed"
	else
	    echo "WARNING: Back up 10.0.1$n.2 skipped"
	fi
    done
    wait
fi   

# Stay up if there is an outside connection
ifaceup eth0; eth0_up=$1
ifaceup wlan0; wlan0_up=$1

if  $eth0_up || $wlan0_up 
then
    echo "INFO: Outside connection detected: do not quit"
fi

# Check if user is logged in
# NOTE: should not matter
if who | grep -q "pi"
then
    echo "INFO: pi is logged in"
else
    echo "INFO: pi is not logged in"
fi

exit

